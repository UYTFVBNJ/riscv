`timescale 1 ps/ 1 ps

module riscv_test();

	reg clk = 1'b0;
	reg reset = 1'b0;

	wire [31:0] ram_if_addr, ram_if_data;
	reg [31:0] ram[128*1024-1:0];
	assign ram_if_data = ram[ram_if_addr[31:2]];

	riscv_core core(
		clk, reset, ram_if_addr, ram_if_data
	);

	
	task tick();
	begin
		#1 clk = 1;
		#1 clk = 0;
	end
	endtask
	task tickn(input integer n);
	integer i;
	begin
		for (i = 0; i < n; i=i+1)
			tick();
	end
	endtask
	

	initial
	begin : TB
		integer i;

		// 记录 core 模块以及其下 1 层子模块的所有变量波形
		$dumpfile("coredump.vcd");
		$dumpvars(1, core);
		$dumpvars(0, core.gprs.regs);
	

		reset = 1'b1;
		tick();
		reset = 1'b0;
		
		for (i=0; i<128*1024; i=i+1)
			ram[i] = 0;
			
		ram[0] = 32'h14400093;	//  addi x0, A20, x1
		ram[1] = 32'h00000013;	//  addi x0, 0, x0
		ram[2] = 32'h00000013;	//  addi x0, 0, x0
		ram[3] = 32'h14408093;	//  addi x1, A20, x1
		
		ram[4] = 32'h00000013;	//  addi x0, 0, x0
		
		$dumpon;
		
		
		tickn(10);
		
		
		$dumpoff;
		$dumpflush;
		$display("All test finished");
	end
endmodule
